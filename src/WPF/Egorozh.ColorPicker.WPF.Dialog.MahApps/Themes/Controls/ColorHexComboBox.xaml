<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colorPicker="clr-namespace:Egorozh.ColorPicker;assembly=Egorozh.ColorPicker.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type colorPicker:ColorHexComboBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextSearch.TextPath" Value="Name" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <!--  change SnapsToDevicePixels to true to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type colorPicker:ColorHexComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border BorderThickness="0 0 1 0"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}"
                                    SnapsToDevicePixels="true"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">

                                <Label Content="#"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />

                            </Border>

                            <Grid Grid.Column="1">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="TextColumn" Width="*" />
                                        <ColumnDefinition x:Name="ButtonColumn"
                                                          Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                        <ColumnDefinition x:Name="ToggleButtonColumn"
                                                          Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition x:Name="ButtonRow" Height="*" />
                                    </Grid.RowDefinitions>

                                    <ToggleButton x:Name="PART_DropDownToggle"
                                                  Grid.RowSpan="2"
                                                  Grid.ColumnSpan="3"
                                                  Margin="0"
                                                  VerticalAlignment="Stretch"
                                                  mah:ControlsHelper.CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                  mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                                  mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                                  mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                                  mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                                  mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                                  mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                                                  Background="Transparent"
                                                  BorderThickness="0"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  KeyboardNavigation.IsTabStop="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Style="{DynamicResource MahApps.Styles.ToggleButton.ComboBoxDropDown}" />

                                    <Grid x:Name="ContentSite"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="1 0">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          IsHitTestVisible="False"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>

                                    <TextBox x:Name="PART_EditableTextBox"
                                             Grid.Row="1"
                                             Grid.Column="0"
                                             Margin="0"
                                             Padding="{TemplateBinding Padding}"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                             mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                             mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                             mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                             mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                             mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}"
                                             mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}"
                                             mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                             mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                             mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                             Background="{x:Null}"
                                             BorderThickness="0"
                                             CharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ComboBoxHelper.CharacterCasing), Mode=OneWay}"
                                             Focusable="True"
                                             FontFamily="{TemplateBinding FontFamily}"
                                             FontSize="{TemplateBinding FontSize}"
                                             Foreground="{TemplateBinding Foreground}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ComboBoxHelper.MaxLength), Mode=OneWay}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                             Style="{StaticResource MahApps.Styles.TextBox.ComboBox.Editable}"
                                             Visibility="Collapsed" />

                                    <TextBlock x:Name="PART_Message"
                                               Grid.Row="1"
                                               Grid.Column="0"
                                               Margin="4 0"
                                               Padding="{TemplateBinding Padding}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                               Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                               TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                               TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                               Visibility="Collapsed" />

                                    <ContentControl x:Name="PART_FloatingMessageContainer"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="4 0"
                                                    Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                        <ContentControl.Height>
                                            <MultiBinding Converter="{mah:MathMultiplyConverter}">
                                                <Binding ElementName="PART_FloatingMessage"
                                                         Mode="OneWay"
                                                         Path="ActualHeight" />
                                                <Binding ElementName="PART_FloatingMessageContainer"
                                                         Mode="OneWay"
                                                         Path="Opacity" />
                                            </MultiBinding>
                                        </ContentControl.Height>
                                        <TextBlock x:Name="PART_FloatingMessage"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                                   Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                                   TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                                   TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform x:Name="FloatingMessageTransform">
                                                    <TranslateTransform.Y>
                                                        <MultiBinding Converter="{mah:MathSubtractConverter}">
                                                            <Binding ElementName="PART_FloatingMessage"
                                                                     Mode="OneWay"
                                                                     Path="ActualHeight" />
                                                            <Binding ElementName="PART_FloatingMessageContainer"
                                                                     Mode="OneWay"
                                                                     Path="ActualHeight" />
                                                        </MultiBinding>
                                                    </TranslateTransform.Y>
                                                </TranslateTransform>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </ContentControl>
                                </Grid>

                                <Border x:Name="DisabledVisualElement"
                                        Grid.ColumnSpan="3"
                                        Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                        BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        IsHitTestVisible="False"
                                        Opacity="0.6"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Visibility="Collapsed" />

                                <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <Grid
                                        MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                        MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="PopupBorder"
                                                Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                                BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}"
                                                BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ScrollViewer Padding="{DynamicResource ComboBoxPopupBorderThemePadding}"
                                                          BorderThickness="0">
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="FocusedDropDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Duration="00:00:00">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                            <Button Grid.Column="2"
                                    Name="PART_CopyButton"
                                    SnapsToDevicePixels="true"
                                    VerticalAlignment="Stretch"

                                    BorderThickness="1 0 0 0"

                                    Style="{DynamicResource MahApps.Styles.Button.Square}"
                                    Background="{DynamicResource DarkGray}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                <Viewbox VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Width="18"
                                         Height="18">
                                    <Path Stretch="Uniform"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" />

                                </Viewbox>
                            </Button>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextMenu, Converter={x:Static mah:IsNullConverter.Instance}}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditableTextBox" Property="ContextMenu"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}"
                                           Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}"
                                           Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}"
                                    Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                                    Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}"
                                    Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}"
                                           Value="False" />
                                <Condition
                                    Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <DataTrigger
                            Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ClearTextButton)}"
                            Value="False">
                            <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_EditableTextBox" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray9}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>

                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground"
                                    Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush"
                Value="{DynamicResource MahApps.Brushes.ComboBox.Border.Focus}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush"
                Value="{DynamicResource MahApps.Brushes.ComboBox.Border.MouseOver}" />
        <Setter Property="mah:TextBoxHelper.ButtonFontSize"
                Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    IsVirtualizing="True"
                                                    IsVirtualizingWhenGrouping="True"
                                                    VirtualizationMode="Recycling" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>